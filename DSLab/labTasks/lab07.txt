select  depart, semester, count(*) from std group by dept, semester
select parkname,parkcounrty,transction# from themepark inner join  sales on themepark.parkcode=sales.parkcode


SELECT Subqueries
The most common type of subquery uses an inner SELECT subquery on the right side of
a WHERE comparison expression. For example,
Task 1 To find the prices of all tickets with a price greater than or equal to the average
ticket price, you write the following query:

SELECT
    -> TICKET_NO, TICKET_TYPE, TICKET_PRICE
    -> FROM TICKET
    -> WHERE
    -> TICKET_PRICE >= (SELECT AVG(TICKET_PRICE) FROM TICKET);
+-----------+-------------+--------------+
| TICKET_NO | TICKET_TYPE | TICKET_PRICE |
+-----------+-------------+--------------+
|     11001 | Adult       |        24.99 |
|     13002 | Adult       |        34.99 |
|     67833 | Adult       |        28.67 |
|     88567 | Child       |        22.50 |
|     88568 | Adult       |        42.10 |
+-----------+-------------+--------------+

 SELECT  EMP_NUM, EMP_LNAME, EMP_FNAME, PARK_NAME FROM EMPLOYEE NATURAL JOIN HOURS NATURAL JOIN ATTRACTION NATURAL JOIN THEMEPARK WHERE PARK_CODE IN (SELECT THEMEPARK.PARK_CODE FROM THEMEPARK WHERE PARK_NAME LIKE '%Fairy%');
+---------+------------+-----------+-----------+
| EMP_NUM | EMP_LNAME  | EMP_FNAME | PARK_NAME |
+---------+------------+-----------+-----------+
|     100 | Calderdale | Emma      | FairyLand |
|     100 | Calderdale | Emma      | FairyLand |
|     105 | Namowa     | Mirrelle  | FairyLand |
|     105 | Namowa     | Mirrelle  | FairyLand |
|     105 | Namowa     | Mirrelle  | FairyLand |
+---------+------------+-----------+-----------+




SELECT DISTINCT EMP_NUM, EMP_LNAME, EMP_FNAME, PARK_NAME FROM EMPLOYEE NATURAL JOIN HOURS NATURAL JOIN ATTRACTION NATURAL JOIN THEMEPARK WHERE PARK_CODE IN (SELECT THEMEPARK.PARK_CODE FROM THEMEPARK WHERE PARK_NAME LIKE '%Fairy%');
+---------+------------+-----------+-----------+
| EMP_NUM | EMP_LNAME  | EMP_FNAME | PARK_NAME |
+---------+------------+-----------+-----------+
|     100 | Calderdale | Emma      | FairyLand |
|     105 | Namowa     | Mirrelle  | FairyLand |
+---------+------------+-----------+-----------+



SELECT PARK_CODE, SUM(LINE_QTY)
    -> FROM SALES_LINE NATURAL JOIN TICKET
    -> GROUP BY PARK_CODE
    -> HAVING SUM(LINE_QTY) > (SELECT AVG(LINE_QTY) FROM SALES_LINE);
+-----------+---------------+
| PARK_CODE | SUM(LINE_QTY) |
+-----------+---------------+
| FR1001    |            14 |
| UK3452    |            29 |
| ZA1342    |            18 |
+-----------+---------------+
														
				SELECT
    -> TICKET_NO, TICKET_PRICE,
    -> (SELECT AVG(TICKET_PRICE) FROM TICKET) AS AVGPRICE,
    -> TICKET_PRICE - (SELECT AVG(TICKET_PRICE) FROM TICKET) AS DIFF
    -> FROM TICKET;
+-----------+--------------+-----------+------------+
| TICKET_NO | TICKET_PRICE | AVGPRICE  | DIFF       |
+-----------+--------------+-----------+------------+
|     11001 |        24.99 | 21.740000 |   3.250000 |
|     11002 |        14.99 | 21.740000 |  -6.750000 |
|     11003 |        10.99 | 21.740000 | -10.750000 |
|     13001 |        18.99 | 21.740000 |  -2.750000 |
|     13002 |        34.99 | 21.740000 |  13.250000 |
|     13003 |        20.99 | 21.740000 |  -0.750000 |
|     67832 |        18.56 | 21.740000 |  -3.180000 |
|     67833 |        28.67 | 21.740000 |   6.930000 |
|     67855 |        12.12 | 21.740000 |  -9.620000 |
|     88567 |        22.50 | 21.740000 |   0.760000 |
|     88568 |        42.10 | 21.740000 |  20.360000 |
|     89720 |        10.99 | 21.740000 | -10.750000 |
+-----------+--------------+-----------+------------+


SELECT roomno, hotel.hotelno, hotelname from hotel INNER JOIN room on hotel.hotelno = room.hotelno where price = (select max(price) from room where price not in ( select max(price) from room));

										

